name: Cortex CD

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'beholder-cortex/**'
      - '!beholder-cortex/README.md'
      - '!beholder-cortex/docs/**'

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      working-directory: ./beholder-cortex

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.working-directory }}

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: beholderrpa/iot-cortex
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Docker meta arm32v7
        id: docker_meta_arm32v7
        uses: docker/metadata-action@v3
        with:
          images: beholderrpa/iot-cortex-arm32v7
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Docker meta arm64
        id: docker_meta_arm64
        uses: docker/metadata-action@v3
        with:
          images: beholderrpa/iot-cortex-arm64
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working-directory }}
          file:  ${{ env.working-directory }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args:  |
            FONTAWESOME_NPM_AUTH_TOKEN=${{secrets.FONTAWESOME_NPM_AUTH_TOKEN}}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      -
        name: Build and push arm32v7
        id: docker_build_arm32v7
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working-directory }}
          file:  ${{ env.working-directory }}/Dockerfile.arm32v7
          build-args:  |
            FONTAWESOME_NPM_AUTH_TOKEN=${{secrets.FONTAWESOME_NPM_AUTH_TOKEN}}
          push: true
          tags: ${{ steps.docker_meta_arm32v7.outputs.tags }}
          labels: ${{ steps.docker_meta_arm32v7.outputs.labels }}
      -
        name: Build and push arm64
        id: docker_build_arm64
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working-directory }}
          file:  ${{ env.working-directory }}/Dockerfile.arm64
          build-args:  |
            FONTAWESOME_NPM_AUTH_TOKEN=${{secrets.FONTAWESOME_NPM_AUTH_TOKEN}}
          push: true
          tags: ${{ steps.docker_meta_arm64.outputs.tags }}
          labels: ${{ steps.docker_meta_arm64.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}