version: "2.4"

services:
  beholder-cortex:
    image: beholder/cortex
    container_name: beholder-cortex
    restart: always
    build:
      context: ./beholder-cortex
      dockerfile: Dockerfile
    networks:
      - backend
  beholder-nexus:
    image: beholder/nexus
    container_name: beholder-nexus
    restart: always
    build:
      context: ./beholder-nexus
      dockerfile: Dockerfile
    networks:
      - backend
  beholder-stalk:
    image: beholder/stalk
    container_name: beholder-stalk
    restart: always
    build:
      context: ./beholder-stalk
      dockerfile: Dockerfile
    devices:
      - "/dev/hidg0:/dev/hidg0"
      - "/dev/hidg1:/dev/hidg1"
      - "/dev/hidg2:/dev/hidg2"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    environment:
      - beholder_stalk_clientid=stalk-01
      - beholder_nexus_url=ws://beholder-nexus:15675/ws
      - beholder_nexus_username=guest
      - beholder_nexus_password=guest
      - beholder_stalk_keymin=40
      - beholder_stalk_keymax=80
    networks:
      - backend
    depends_on:
      - beholder-nexus
  # Foundational
  beholder-grafana:
    image: grafana/grafana
    container_name: beholder-grafana
    build:
      context: ./beholder-grafana
      dockerfile: Dockerfile
    restart: always
    environment:
      GF_LOG_MODE: console
    networks:
      - backend
    volumes:
      - beholder_grafana_data:/var/lib/grafana
  beholder-postgres:
    image: beholder/postgres
    container_name: beholder-postgres
    restart: always
    build:
      context: ./beholder-postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: beholder
      POSTGRES_PASSWORD: beholder
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - backend
    volumes:
      - beholder_postgres_data:/var/lib/postgresql/data
  beholder-nginx:
    image: beholder/nginx
    container_name: beholder-nginx
    build:
      context: ./beholder-nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    networks:
      - frontend
      - backend
    depends_on:
      - beholder-cortex
      - beholder-nexus
  watchtower:
    image: containrrr/watchtower
    container_name: beholder-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  frontend:
  backend:

volumes:
  beholder_postgres_data:
  beholder_grafana_data:
