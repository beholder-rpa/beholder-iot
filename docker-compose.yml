version: "2.4"

services:
  ###############################################
  # Beholder Cortex
  beholder-cortex:
    image: beholderrpa/cortex:rpi
    container_name: beholder-cortex
    restart: always
    build:
      context: ./beholder-cortex
      dockerfile: Dockerfile
    networks:
      - backend
  ###############################################
  # Beholder Nexus
  beholder-nexus:
    image: beholderrpa/nexus:rpi
    container_name: beholder-nexus
    restart: always
    command: 
        - "rabbitmq-server"
        - "rabbitmq-plugins enable --offline rabbitmq_mqtt rabbitmq_web_mqtt"
    expose: 
      # Management Port
      - 15672
      # MQTT Port
      - 1883
      # MQTT Web Port
      - 15675  
    networks:
      - backend
  ###############################################
  # Beholder Stalk
  beholder-stalk:
    image: beholderrpa/stalk:rpi
    container_name: beholder-stalk
    restart: always
    build:
      context: ./beholder-stalk
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    environment:
      - beholder_stalk_clientid=stalk-01
      - beholder_nexus_url=ws://beholder-nexus:15675/ws
      - beholder_nexus_username=guest
      - beholder_nexus_password=guest
      - beholder_stalk_keymin=40
      - beholder_stalk_keymax=80
    networks:
      - backend
    depends_on:
      - beholder-nexus
  ###############################################
  # Beholder Grafana
  beholder-grafana:
    image: beholderrpa/grafana:rpi
    container_name: beholder-grafana
    build:
      context: ./beholder-grafana
      dockerfile: Dockerfile
    restart: always
    environment:
      GF_LOG_MODE: console
    networks:
      - backend
    volumes:
      - beholder_grafana_data:/var/lib/grafana
  ###############################################
  # Beholder Postgres
  beholder-postgres:
    image: beholderrpa/postgres:rpi
    container_name: beholder-postgres
    restart: always
    build:
      context: ./beholder-postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: beholder
      POSTGRES_PASSWORD: beholder
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - backend
    volumes:
      - beholder_postgres_data:/var/lib/postgresql/data
  ###############################################
  # Beholder Reverse Proxy
  beholder-traefik:
    image: traefik:v2.4
    container_name: beholder-traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend
      - backend
    labels:
      - traefik.http.middlewares.redirect_to_ssl.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect_to_ssl.redirectscheme.permanent=true
    volumes:
    - ./beholder-traefik:/etc/traefik/
    - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  frontend:
  backend:

volumes:
  beholder_postgres_data:
  beholder_grafana_data:
