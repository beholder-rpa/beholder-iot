[
    {
        "id": "5b3b16f7b12de95a",
        "type": "tab",
        "label": "Cookie Clicker",
        "disabled": false,
        "info": ""
    },
    {
        "id": "13065b3553c3ca8f",
        "type": "tab",
        "label": "Global Events",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6a61b64910c046bc",
        "type": "tab",
        "label": "Debug",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0b70dd4da53f0867",
        "type": "mqtt-broker",
        "name": "Beholder Nexus",
        "broker": "beholder-nexus",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "63cb76a5b524998b",
        "type": "mqtt in",
        "z": "13065b3553c3ca8f",
        "name": "on beholder service broadcast",
        "topic": "beholder/ctaf",
        "qos": "2",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "21063c9ffa31504a"
            ]
        ]
    },
    {
        "id": "e1c18e4bdc5a93b3",
        "type": "debug",
        "z": "13065b3553c3ca8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "21063c9ffa31504a",
        "type": "function",
        "z": "13065b3553c3ca8f",
        "name": "populate global services",
        "func": "const services = global.get(\"beholder_services\") || {};\n\nconst payload = msg.payload;\nif (payload.data) {\n    if (!services[payload.data.serviceName]) {\n       services[payload.data.serviceName] = [];\n    }\n    \n    const serviceHosts = services[payload.data.serviceName];\n    \n    if (!serviceHosts.includes(payload.data.hostName)) {\n        serviceHosts.push(payload.data.hostName);\n    }\n    global.set(\"beholder_services\", services);\n    node.log(JSON.stringify(services));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 40,
        "wires": [
            [
                "e1c18e4bdc5a93b3"
            ]
        ]
    },
    {
        "id": "f8b145bf32508c97",
        "type": "mqtt in",
        "z": "13065b3553c3ca8f",
        "name": "on pointer position changed",
        "topic": "beholder/eye/+/pointer_position",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 140,
        "y": 120,
        "wires": [
            [
                "477da9ac4ee0c2c2"
            ]
        ]
    },
    {
        "id": "477da9ac4ee0c2c2",
        "type": "function",
        "z": "13065b3553c3ca8f",
        "name": "set global beholder_pointer_current_position",
        "func": "const payload = msg.payload;\nnode.status({text: `X: ${payload.data.x} Y: ${payload.data.y}`});\nglobal.set(\"beholder_pointer_current_position\", {\n    x: payload.data.x,\n    y: payload.data.y\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d30bd1dcc177d9ae",
        "type": "mqtt in",
        "z": "13065b3553c3ca8f",
        "name": "on pointer position changed",
        "topic": "beholder/psionix/+/pointer_position",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 140,
        "y": 160,
        "wires": [
            [
                "477da9ac4ee0c2c2"
            ]
        ]
    },
    {
        "id": "a911c0aa54a1e87d",
        "type": "jimp-image",
        "z": "13065b3553c3ca8f",
        "name": "",
        "data": "payload.data.image",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 1170,
        "y": 40,
        "wires": [
            [
                "565eb666df167810"
            ]
        ]
    },
    {
        "id": "0f2638177f9ba6bd",
        "type": "mqtt in",
        "z": "13065b3553c3ca8f",
        "name": "on pointer image changed",
        "topic": "beholder/eye/+/pointer_image",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 970,
        "y": 40,
        "wires": [
            [
                "a911c0aa54a1e87d"
            ]
        ]
    },
    {
        "id": "565eb666df167810",
        "type": "image viewer",
        "z": "13065b3553c3ca8f",
        "name": "",
        "width": "25",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 1310,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c0c6edf21f83149a",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/stalk/+/keyboard/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "ec0798c50e445d70",
        "type": "debug",
        "z": "6a61b64910c046bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "1ff5b7565811c8d9",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/stalk/+/mouse/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "e5a39b81f1ad5f54",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/psionix/+/hotkeys/pressed/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "aaed171a3b2d7551",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "f71baaefafd985bf"
            ]
        ]
    },
    {
        "id": "f71baaefafd985bf",
        "type": "send-keys",
        "z": "6a61b64910c046bc",
        "keys": "Asdf",
        "x": 340,
        "y": 400,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "33a755ca2b8e0d61",
        "type": "register-hotkey",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "c4633543d6aa9823",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "33a755ca2b8e0d61"
            ]
        ]
    },
    {
        "id": "f9802c3a1938bbb3",
        "type": "unregister-hotkey",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "b447b28f202f0c9b",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "f9802c3a1938bbb3"
            ]
        ]
    },
    {
        "id": "815fca67dc4f1df5",
        "type": "eye-start-observing",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "adapterIndex": "0",
        "deviceIndex": "0",
        "regions": [],
        "streamDesktopThumbnail": "true",
        "streamPointerImage": "true",
        "desktopThumbnailStreamSettingsMaxFps": "0.5",
        "desktopThumbnailStreamSettingsScaleFactor": "0.15",
        "pointerImageStreamSettingsMaxFps": "0.5",
        "watchPointerPosition": "true",
        "x": 320,
        "y": 600,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "7881dd5bb0fee994",
        "type": "stop-observing",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "x": 320,
        "y": 660,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "dd35fc2e379fa347",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "815fca67dc4f1df5"
            ]
        ]
    },
    {
        "id": "039bee5fef1987c6",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "7881dd5bb0fee994"
            ]
        ]
    },
    {
        "id": "c6fcf8d3ddce7ff0",
        "type": "remove-focus-region",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "focusRegionName": "default",
        "x": 300,
        "y": 720,
        "wires": [
            [
                "bde0df30871a605e"
            ]
        ]
    },
    {
        "id": "8d700cf9c8bc3b71",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "c6fcf8d3ddce7ff0"
            ]
        ]
    },
    {
        "id": "bde0df30871a605e",
        "type": "mqtt out",
        "z": "6a61b64910c046bc",
        "name": "Beholder Nexus",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0b70dd4da53f0867",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "a452ecc746b49b31",
        "type": "mqtt out",
        "z": "5b3b16f7b12de95a",
        "name": "Beholder Nexus",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0b70dd4da53f0867",
        "x": 1180,
        "y": 700,
        "wires": []
    },
    {
        "id": "a20509f002b98de9",
        "type": "send-mouse-click",
        "z": "5b3b16f7b12de95a",
        "button": "lclick",
        "click_direction": 0,
        "duration": null,
        "x": 830,
        "y": 600,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "bb1f72790d7d12db",
        "type": "register-hotkey",
        "z": "5b3b16f7b12de95a",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 780,
        "y": 880,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "d47744512b474040",
        "type": "unregister-hotkey",
        "z": "5b3b16f7b12de95a",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 770,
        "y": 940,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "54677c7e9faec3c3",
        "type": "eye-start-observing",
        "z": "5b3b16f7b12de95a",
        "hostname": "",
        "adapterIndex": "0",
        "deviceIndex": "0",
        "regions": [],
        "streamDesktopThumbnail": "true",
        "streamPointerImage": "true",
        "desktopThumbnailStreamSettingsMaxFps": "0.5",
        "desktopThumbnailStreamSettingsScaleFactor": "0.15",
        "pointerImageStreamSettingsMaxFps": "0.5",
        "watchPointerPosition": "true",
        "x": 780,
        "y": 1040,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "a13940027781617e",
        "type": "stop-observing",
        "z": "5b3b16f7b12de95a",
        "hostname": "",
        "x": 780,
        "y": 1100,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "21d416d2262f1804",
        "type": "update-focus-region",
        "z": "5b3b16f7b12de95a",
        "hostname": "",
        "focusRegionName": "default",
        "focusRegionX": "200",
        "focusRegionY": "200",
        "focusRegionWidth": "640",
        "focusRegionHeight": "480",
        "focusRegionMaxFps": "0.15",
        "x": 830,
        "y": 760,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "b074feee2745ba5c",
        "type": "detect-object",
        "z": "5b3b16f7b12de95a",
        "queryImagePrefrontalKey": "",
        "targetImagePrefrontalKey": "",
        "matchRatioThreshold": 0.76,
        "scaleIncrement": 2,
        "rotationBins": 20,
        "outputImagePrefrontalKey": "",
        "x": 910,
        "y": 680,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "ca19638ec4477069",
        "type": "move-mouse-to",
        "z": "5b3b16f7b12de95a",
        "targetPositionX": "",
        "targetPositionY": "",
        "preMoveActions": "",
        "postMoveActions": "{lclick}",
        "movementSpeed": "3",
        "movementScaleX": "1.4",
        "movementScaleY": "1.4",
        "movementDelayMs": "",
        "x": 1220,
        "y": 380,
        "wires": [
            [
                "a452ecc746b49b31"
            ]
        ]
    },
    {
        "id": "956b2ac37199efac",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "increment click count",
        "func": "let clickCount = flow.get(\"cookie_clicker_click_count\") || 0;\nclickCount++;\nflow.set(\"cookie_clicker_click_count\", clickCount);\nnode.status({text: clickCount});\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 600,
        "wires": [
            [
                "a20509f002b98de9"
            ]
        ]
    },
    {
        "id": "099265f41f858ffa",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 650,
        "y": 840,
        "wires": [
            [
                "bb1f72790d7d12db"
            ]
        ]
    },
    {
        "id": "7781cb1bfe5ed28d",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "property": "payload.data.processName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cookie Clicker",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 860,
        "wires": [
            [
                "bb1f72790d7d12db",
                "54677c7e9faec3c3"
            ],
            [
                "a13940027781617e"
            ]
        ]
    },
    {
        "id": "10186ee41eb9f51f",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 940,
        "wires": [
            [
                "d47744512b474040"
            ]
        ]
    },
    {
        "id": "c38115727d154c75",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "54677c7e9faec3c3"
            ]
        ]
    },
    {
        "id": "a9ddb07adc38a788",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 630,
        "y": 1140,
        "wires": [
            [
                "a13940027781617e"
            ]
        ]
    },
    {
        "id": "f9b6966bc8513856",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "create focus region request for active process window",
        "func": "const payload = msg.payload;\n\nreturn {\n    payload: {\n        name: \"default\",\n        kind: \"image\",\n        bitmapSettings: {\n            x: payload.data.windowPosition.x,\n            y: payload.data.windowPosition.y,\n            width: payload.data.windowPosition.width,\n            height: payload.data.windowPosition.height,\n            maxFps: 0.25\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 760,
        "wires": [
            [
                "21d416d2262f1804"
            ]
        ]
    },
    {
        "id": "bcf433b5e9bab1fd",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "create detection request",
        "func": "\nreturn {\n    payload: {\n        queryImagePrefrontalKey: \"images%2FgoldCookie\",\n        targetImagePrefrontalKey: msg.payload.data.prefrontalImageKey,\n        matchMaskSettings: {\n          ratioThreshold: 0.76,\n          scaleIncrement: 2.0,\n          rotationBins: 20,\n        },\n        outputImagePrefrontalKey: null,\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 680,
        "wires": [
            [
                "b074feee2745ba5c"
            ]
        ]
    },
    {
        "id": "731fbb55b777bd7f",
        "type": "throttle",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "throttleType": "time",
        "timeLimit": "2",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "ca19638ec4477069"
            ]
        ]
    },
    {
        "id": "d66ef2ded60e78cb",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "switch",
        "property": "cookie_clicker_state",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "golden_cookie",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 580,
        "wires": [
            [],
            [
                "956b2ac37199efac"
            ]
        ]
    },
    {
        "id": "3714332e699e79db",
        "type": "mqtt in",
        "z": "5b3b16f7b12de95a",
        "name": "on active process changed",
        "topic": "beholder/psionix/+/active_process_changed",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 150,
        "y": 760,
        "wires": [
            [
                "7781cb1bfe5ed28d",
                "f9b6966bc8513856"
            ]
        ]
    },
    {
        "id": "317cd6185c5c2421",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "set target position to cookie position",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cookie_position",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 300,
        "wires": [
            [
                "731fbb55b777bd7f"
            ]
        ]
    },
    {
        "id": "d83c7c758a5df389",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "golden cookie location",
        "func": "const polys = msg.payload.data;\nconst activeProcess = global.get(\"beholder_active_process\");\n\nif (!polys || polys.length === 0) {\n    return null;\n}\n\nif (!activeProcess) {\n    return null;\n}\n\nlet midpoints = [];\n\npolys.forEach((poly) => {\n    var mid = {\n        x: 0,\n        y: 0,\n    };\n\n    poly.points.forEach((point) => {\n        mid.x += point.x + activeProcess.windowPosition.x;\n        mid.y += point.y + activeProcess.windowPosition.y;\n    });\n    mid.x = Math.floor(mid.x / poly.points.length);\n    mid.y = Math.floor(mid.y / poly.points.length);\n    midpoints.push(mid);\n});\n\nnode.warn(JSON.stringify(midpoints));\n\nnode.status({text: `X: ${midpoints[0].x} Y: ${midpoints[0].y}`});\n\nreturn {\n    payload: midpoints[0]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "731fbb55b777bd7f",
                "89bc3e4e258a044d"
            ]
        ]
    },
    {
        "id": "e0a9264a325ca780",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "state",
        "func": "const state = flow.get(\"cookie_clicker_state\") || \"stopped\";\nnode.status({text: state});\nreturn {};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 580,
        "wires": [
            [
                "d66ef2ded60e78cb"
            ]
        ]
    },
    {
        "id": "6ef761fb1d0f644f",
        "type": "mqtt in",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "topic": "beholder/eye/+/region/+",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 160,
        "y": 680,
        "wires": [
            [
                "1b80e1c1ed40addb"
            ]
        ]
    },
    {
        "id": "e39d080b5092207c",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "set state to idle",
        "rules": [
            {
                "t": "set",
                "p": "cookie_clicker_state",
                "pt": "flow",
                "to": "idle",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 300,
        "wires": [
            [
                "317cd6185c5c2421"
            ]
        ]
    },
    {
        "id": "c1034286a85bf26a",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 930,
        "y": 240,
        "wires": [
            [
                "317cd6185c5c2421"
            ]
        ]
    },
    {
        "id": "cec87ed245f42e30",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "set state to golden cookie",
        "rules": [
            {
                "t": "set",
                "p": "cookie_clicker_state",
                "pt": "global",
                "to": "golden_cookie",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "d83c7c758a5df389"
            ]
        ]
    },
    {
        "id": "89bc3e4e258a044d",
        "type": "rbe",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 440,
        "wires": [
            [
                "d03982fe055c45b7"
            ]
        ]
    },
    {
        "id": "25954b9ad3459eed",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "loop",
        "props": [],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 110,
        "y": 580,
        "wires": [
            [
                "e0a9264a325ca780",
                "19b5ecd572239ea7",
                "53683ee1a6f5a550"
            ]
        ]
    },
    {
        "id": "b7e9b05dec62e1d0",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "if cookie clicker is golden_cookie or idle",
        "property": "cookie_clicker_state",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "golden_cookie",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "e39d080b5092207c"
            ],
            [
                "e39d080b5092207c"
            ]
        ]
    },
    {
        "id": "61d91dd421e4d837",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "if cookie clicker is golden_cookie or idle",
        "property": "cookie_clicker_state",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "golden_cookie",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 300,
        "wires": [
            [
                "cec87ed245f42e30"
            ],
            [
                "cec87ed245f42e30"
            ]
        ]
    },
    {
        "id": "d03982fe055c45b7",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "increment golden cookie count",
        "func": "let cookieCount = flow.get(\"golden_cookie_click_count\") || 0;\ncookieCount++;\nflow.set(\"golden_cookie_click_count\", cookieCount);\nnode.status({text: cookieCount});\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "19b5ecd572239ea7",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "big cookie location",
        "func": "const pos = flow.get(\"cookie_position\") || { x: 0, y: 0};\nnode.status({text: `X: ${pos.x} Y: ${pos.y}`});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "eae5f482832ae37c",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "detected count",
        "property": "payload.data.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "b7e9b05dec62e1d0",
                "7095d80831f40f1f"
            ],
            [
                "61d91dd421e4d837",
                "9c4d192a3ffcc585"
            ]
        ]
    },
    {
        "id": "1ad67a9ed3472606",
        "type": "mqtt in",
        "z": "5b3b16f7b12de95a",
        "name": "on detected objects",
        "topic": "beholder/occipital/+/detected_objects",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 200,
        "wires": [
            [
                "eae5f482832ae37c"
            ]
        ]
    },
    {
        "id": "7095d80831f40f1f",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "= 0 - set TTS msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "no cookies found :(",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "e35d532410d328b0"
            ]
        ]
    },
    {
        "id": "9c4d192a3ffcc585",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "> 0 - set TTS msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Oh look, it's a golden cookie!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "e35d532410d328b0"
            ]
        ]
    },
    {
        "id": "e35d532410d328b0",
        "type": "throttle",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "throttleType": "time",
        "timeLimit": "0",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "53165ee276212aa6"
            ]
        ]
    },
    {
        "id": "53165ee276212aa6",
        "type": "rbe",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "3db1e1b770048671"
            ]
        ]
    },
    {
        "id": "3db1e1b770048671",
        "type": "play audio",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "voice": "5",
        "x": 1230,
        "y": 80,
        "wires": []
    },
    {
        "id": "b753cf068a58b8de",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "active - set TTS msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "clicker enabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 40,
        "wires": [
            [
                "3db1e1b770048671"
            ]
        ]
    },
    {
        "id": "1c9be2895eab85d8",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "inactive- set TTS msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "clicker disabled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 100,
        "wires": [
            [
                "3db1e1b770048671"
            ]
        ]
    },
    {
        "id": "47619e55c4a24c53",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "set known cookie position",
        "rules": [
            {
                "t": "set",
                "p": "cookie_position",
                "pt": "flow",
                "to": "beholder_pointer_current_position",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 40,
        "wires": [
            [
                "b753cf068a58b8de"
            ]
        ]
    },
    {
        "id": "0cad2766305c17d0",
        "type": "change",
        "z": "5b3b16f7b12de95a",
        "name": "clear known cookie position",
        "rules": [
            {
                "t": "delete",
                "p": "cookie_position",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "1c9be2895eab85d8"
            ]
        ]
    },
    {
        "id": "920b2c520ff14543",
        "type": "switch",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "property": "cookie_clicker_state",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "47619e55c4a24c53"
            ],
            [
                "0cad2766305c17d0"
            ]
        ]
    },
    {
        "id": "430fb44bf0d54d7a",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "set cookie clicker state",
        "func": "let state = flow.get(\"cookie_clicker_state\") || \"stopped\";\n\nif (state === \"stopped\") {\n    state = 'idle';\n} else {\n    state = 'stopped';\n    flow.set(\"cookie_clicker_click_count\", 0);\n}\n\nflow.set(\"cookie_clicker_state\", state);\n\nreturn {\n    payload: state\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "920b2c520ff14543"
            ]
        ]
    },
    {
        "id": "6437fd87ade54ba3",
        "type": "mqtt in",
        "z": "5b3b16f7b12de95a",
        "name": "on ctrl-shift-tilde",
        "topic": "beholder/psionix/+/hotkeys/pressed/Xit7T2VtdGlsZGV9",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "430fb44bf0d54d7a"
            ]
        ]
    },
    {
        "id": "b81eac771a546196",
        "type": "inject",
        "z": "5b3b16f7b12de95a",
        "name": "manual toggle",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "430fb44bf0d54d7a"
            ]
        ]
    },
    {
        "id": "1b80e1c1ed40addb",
        "type": "rbe",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 350,
        "y": 680,
        "wires": [
            [
                "a083be4aca3b4be7"
            ]
        ]
    },
    {
        "id": "a083be4aca3b4be7",
        "type": "throttle",
        "z": "5b3b16f7b12de95a",
        "name": "",
        "throttleType": "time",
        "timeLimit": "1.0",
        "timeLimitType": "seconds",
        "countLimit": 0,
        "blockSize": 0,
        "locked": false,
        "x": 490,
        "y": 680,
        "wires": [
            [
                "bcf433b5e9bab1fd"
            ]
        ]
    },
    {
        "id": "53683ee1a6f5a550",
        "type": "function",
        "z": "5b3b16f7b12de95a",
        "name": "current mouse location",
        "func": "const pos = flow.get(\"cookie_position\") || 0;\nnode.status({text: `X: ${pos.x} Y: ${pos.y}`});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "794fe92066ef8ace",
        "type": "mqtt in",
        "z": "13065b3553c3ca8f",
        "name": "on active process changed",
        "topic": "beholder/psionix/+/active_process_changed",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "c44c213017bc5f6d"
            ]
        ]
    },
    {
        "id": "c44c213017bc5f6d",
        "type": "function",
        "z": "13065b3553c3ca8f",
        "name": "set global beholder_active_process",
        "func": "const payload = msg.payload;\nif (!payload.data) {\n    return null;\n}\nnode.status({text: `${payload.data.processName} - X: ${payload.data.windowPosition.x} Y: ${payload.data.windowPosition.y} Width: ${payload.data.windowPosition.width} Height: ${payload.data.windowPosition.height}`});\nglobal.set(\"beholder_active_process\", payload.data);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    }
]