[
    {
        "id": "6a61b64910c046bc",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0b70dd4da53f0867",
        "type": "mqtt-broker",
        "name": "Beholder Nexus",
        "broker": "beholder-nexus",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7d9c49c23c8e96bf",
        "type": "mqtt out",
        "z": "6a61b64910c046bc",
        "name": "Beholder Nexus",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0b70dd4da53f0867",
        "x": 1100,
        "y": 560,
        "wires": []
    },
    {
        "id": "ce68bc1669887eeb",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/ctaf",
        "qos": "2",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 330,
        "y": 40,
        "wires": [
            [
                "a89eb3c39c45b8ee"
            ]
        ]
    },
    {
        "id": "701d74bb8d94326d",
        "type": "debug",
        "z": "6a61b64910c046bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "d9357588238da7e8",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 520,
        "wires": [
            [
                "2f36a5c4d50815d4"
            ]
        ]
    },
    {
        "id": "c0c6edf21f83149a",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/stalk/+/keyboard/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "ec0798c50e445d70",
        "type": "debug",
        "z": "6a61b64910c046bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "2f36a5c4d50815d4",
        "type": "send-keys",
        "z": "6a61b64910c046bc",
        "keys": "Asdf",
        "x": 800,
        "y": 520,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "92d2c5897081f7cd",
        "type": "send-mouse-click",
        "z": "6a61b64910c046bc",
        "button": "lclick",
        "click_direction": 0,
        "duration": null,
        "x": 770,
        "y": 600,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "85fad01cc7dce6ba",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "loop",
        "props": [],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 370,
        "y": 580,
        "wires": [
            [
                "694025d4212a209e"
            ]
        ]
    },
    {
        "id": "1ff5b7565811c8d9",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/stalk/+/mouse/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "033ed51af12f47a2",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 370,
        "y": 720,
        "wires": [
            [
                "694025d4212a209e"
            ]
        ]
    },
    {
        "id": "694025d4212a209e",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "toggle",
        "func": "const state = context.get(\"state\") || false;\nlet count = context.get(\"count\") || 0;\n\nswitch(msg.payload) {\n    case \"start\":\n        count = 0;\n        context.set(\"count\", 0);\n        context.set(\"state\", true);\n        node.status({text: count});\n        break;\n    case \"stop\":\n        count = 0;\n        context.set(\"count\", 0);\n        context.set(\"state\", false);\n        node.status({text: count});\n        break;\n    case \"toggle\":\n        count = 0;\n        context.set(\"count\", 0);\n        context.set(\"state\", !state);\n        node.status({text: count});\n        break;\n    default:\n        if (!state) {\n            return null;\n        }\n        count++;\n        context.set(\"count\", count);\n        node.status({text: count});\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "92d2c5897081f7cd"
            ]
        ]
    },
    {
        "id": "a844ef87fb01cb87",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "694025d4212a209e"
            ]
        ]
    },
    {
        "id": "1e84eeba5db90a04",
        "type": "register-hotkey",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 780,
        "y": 740,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "224dc1ff7bd71280",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 740,
        "wires": [
            [
                "1e84eeba5db90a04"
            ]
        ]
    },
    {
        "id": "e5a39b81f1ad5f54",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/psionix/+/hotkeys/pressed/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "ec0798c50e445d70"
            ]
        ]
    },
    {
        "id": "a681df0fe35a76c8",
        "type": "unregister-hotkey",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "modifiers": "^+",
        "key": "{Oemtilde}",
        "x": 770,
        "y": 800,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "f3f2ec5553e65845",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 800,
        "wires": [
            [
                "a681df0fe35a76c8"
            ]
        ]
    },
    {
        "id": "a89eb3c39c45b8ee",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "populate services",
        "func": "const services = global.get(\"beholder_services\") || {};\n\nconst payload = msg.payload;\nif (payload.data) {\n    if (!services[payload.data.serviceName]) {\n       services[payload.data.serviceName] = [];\n    }\n    \n    const serviceHosts = services[payload.data.serviceName];\n    \n    if (!serviceHosts.includes(payload.data.hostName)) {\n        serviceHosts.push(payload.data.hostName);\n    }\n    global.set(\"beholder_services\", services);\n    node.log(JSON.stringify(services));\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 40,
        "wires": [
            [
                "701d74bb8d94326d"
            ]
        ]
    },
    {
        "id": "9b1dfda1f1f8156c",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/psionix/+/hotkeys/pressed/Xit7T2VtdGlsZGV9",
        "qos": "1",
        "datatype": "auto",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "4ca0dd73db3eccac"
            ]
        ]
    },
    {
        "id": "4ca0dd73db3eccac",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "on ctrl-shift-tilde",
        "func": "let count = context.get(\"count\") || 0;\ncount++;\ncontext.set(\"count\", count);\nnode.status({text: count});\n\nreturn {\n    payload: \"toggle\"\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "694025d4212a209e"
            ]
        ]
    },
    {
        "id": "44f131939119e2b3",
        "type": "eye-start-observing",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "adapterIndex": "0",
        "deviceIndex": "0",
        "regions": [],
        "streamDesktopThumbnail": "true",
        "streamPointerImage": "true",
        "desktopThumbnailStreamSettingsMaxFps": "0.5",
        "desktopThumbnailStreamSettingsScaleFactor": "0.15",
        "pointerImageStreamSettingsMaxFps": "0.5",
        "watchPointerPosition": "true",
        "x": 780,
        "y": 880,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "b954a2995a0b63f3",
        "type": "stop-observing",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "x": 780,
        "y": 940,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "147e2214f41cb1b5",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 880,
        "wires": [
            [
                "44f131939119e2b3"
            ]
        ]
    },
    {
        "id": "9ab1a19cc7c29a6e",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 940,
        "wires": [
            [
                "b954a2995a0b63f3"
            ]
        ]
    },
    {
        "id": "d0a94632658c6d93",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/eye/+/pointer_position",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "a4e0e30675be9f61"
            ]
        ]
    },
    {
        "id": "a4e0e30675be9f61",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "pointer position",
        "func": "const payload = msg.payload;\nnode.status({text: `X: ${payload.data.x} Y: ${payload.data.y}`});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "babe2eb33a9f97d0",
        "type": "jimp-image",
        "z": "6a61b64910c046bc",
        "name": "",
        "data": "payload.data.image",
        "dataType": "msg",
        "ret": "img",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "fb2a2066576717aa"
            ]
        ]
    },
    {
        "id": "eb74280d91c37d5e",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/eye/+/pointer_image",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1160,
        "y": 120,
        "wires": [
            [
                "babe2eb33a9f97d0"
            ]
        ]
    },
    {
        "id": "fb2a2066576717aa",
        "type": "image viewer",
        "z": "6a61b64910c046bc",
        "name": "",
        "width": "25",
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 1550,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "391b273d293ba752",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/eye/+/region/+",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "4c38ed9e60e155d6",
                "3eb030707ceb7775"
            ]
        ]
    },
    {
        "id": "6e2d116e9b7930e4",
        "type": "http request",
        "z": "6a61b64910c046bc",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1570,
        "y": 220,
        "wires": [
            [
                "19e72b5bb054139f"
            ]
        ]
    },
    {
        "id": "4c38ed9e60e155d6",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "",
        "func": "const url = `http://beholder-epidermis/api/epidermis/download/${msg.payload.data.prefrontalImageKey}`;\nreturn {\n    url\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 220,
        "wires": [
            [
                "6e2d116e9b7930e4"
            ]
        ]
    },
    {
        "id": "19e72b5bb054139f",
        "type": "image",
        "z": "6a61b64910c046bc",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1780,
        "y": 220,
        "wires": []
    },
    {
        "id": "d87894ce18bc09fd",
        "type": "mqtt in",
        "z": "6a61b64910c046bc",
        "name": "",
        "topic": "beholder/psionix/+/active_process_changed",
        "qos": "1",
        "datatype": "json",
        "broker": "0b70dd4da53f0867",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 250,
        "y": 360,
        "wires": [
            [
                "f646742f6716a194"
            ]
        ]
    },
    {
        "id": "f646742f6716a194",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "active process",
        "func": "const payload = msg.payload;\nnode.status({text: `${payload.data.processName} - X: ${payload.data.windowPosition.x} Y: ${payload.data.windowPosition.y}`});\n\nreturn {\n    payload: {\n        name: \"default\",\n        kind: \"image\",\n        bitmapSettings: {\n            x: payload.data.windowPosition.x,\n            y: payload.data.windowPosition.y,\n            width: payload.data.windowPosition.width,\n            height: payload.data.windowPosition.height,\n            maxFps: 0.25\n        }\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 360,
        "wires": [
            [
                "78751995cdf02b81"
            ]
        ]
    },
    {
        "id": "78751995cdf02b81",
        "type": "update-focus-region",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "focusRegionName": "default",
        "focusRegionX": "200",
        "focusRegionY": "200",
        "focusRegionWidth": "640",
        "focusRegionHeight": "480",
        "focusRegionMaxFps": "0.25",
        "x": 770,
        "y": 440,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "ab3a064cde3f0484",
        "type": "remove-focus-region",
        "z": "6a61b64910c046bc",
        "hostname": "",
        "focusRegionName": "default",
        "x": 760,
        "y": 1000,
        "wires": [
            [
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "d7d9beeaa8d704fd",
        "type": "inject",
        "z": "6a61b64910c046bc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "ab3a064cde3f0484"
            ]
        ]
    },
    {
        "id": "3eb030707ceb7775",
        "type": "function",
        "z": "6a61b64910c046bc",
        "name": "",
        "func": "\nreturn {\n    payload: {\n        queryImagePrefrontalKey: \"images%2FgoldCookie\",\n        targetImagePrefrontalKey: msg.payload.data.prefrontalImageKey,\n        matchMaskSettings: {\n          RatioThreshold: 0.76,\n          ScaleIncrement: 2.0,\n          RotationBins: 20,\n        },\n        outputImagePrefrontalKey: \"images/testOutput\",\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 340,
        "wires": [
            [
                "7f017b15dc34141a"
            ]
        ]
    },
    {
        "id": "7f017b15dc34141a",
        "type": "detect-object",
        "z": "6a61b64910c046bc",
        "queryImagePrefrontalKey": "",
        "targetImagePrefrontalKey": "",
        "matchRatioThreshold": 0.76,
        "scaleIncrement": 2,
        "rotationBins": 20,
        "outputImagePrefrontalKey": "",
        "x": 1580,
        "y": 440,
        "wires": [
            [
                "58024a0bb271f0ff",
                "7d9c49c23c8e96bf"
            ]
        ]
    },
    {
        "id": "58024a0bb271f0ff",
        "type": "debug",
        "z": "6a61b64910c046bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 440,
        "wires": []
    }
]